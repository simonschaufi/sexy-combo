/****************************************************************************Copyright(C)2009 by Vladimir Kadalashvili**Kadalashvili.Vladimir@gmail.com****This program is free software;
you can redistribute it and/or modify**it under the terms of the GNU General Public License as published by**the Free Software Foundation;
either version 2 of the License,or**(at your option)any later version.****This program is distributed in the hope that it will be useful,**but WITHOUT ANY WARRANTY;
without even the implied warranty of**MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the**GNU General Public License for more details.****You should have received a copy of the GNU General Public License**along with this program;
if not,write to the**Free Software Foundation,Inc.,**59 Temple Place-Suite 330,Boston,MA 02111-1307,USA.****************************************************************************/;
(function(){$.fn.sexyCombo=function(a){return this.each(function(){if("SELECT"!=this.tagName.toUpperCase()){return}new h(this,a)})};
//default config options var g={//skin name skin:"sexy",//this suffix will be appended to the selectbox's name and will be text input's name suffix:"__sexyCombo",//the same as the previous,but for hidden input hiddenSuffix:"__sexyComboHidden",//initial/default hidden field value.//Also applied when user types something that is not in the options list initialHiddenValue:"",//if provided,will be the value of the text input when it has no value and focus emptyText:"",//if true,autofilling will be enabled autoFill:false,//if true,selected option of the selectbox will be the initial value of the combo triggerSelected:false,//function for options filtering filterFn:null,//if true,the options list will be placed above text input dropUp:false,//separator for values of multiple combos separator:",",//all callback functions are called in the scope of the current sexyCombo instance//called after dropdown list appears showListCallback:null,//called after dropdown list disappears hideListCallback:null,//called at the end of constructor initCallback:null,//called at the end of initEvents function initEventsCallback:null,//called when both text and hidden inputs values are changed changeCallback:null,//called when text input's value is changed textChangeCallback:null};
//constructor//creates initial markup and does some initialization $.sexyCombo=function(b,c){if(b.tagName.toUpperCase()!="SELECT")return;
this.config=$.extend({},g,c||{});
this.selectbox=$(b);
this.options=this.selectbox.children().filter("option");
this.wrapper=this.selectbox.wrap("<div>").hide().parent().addClass("combo").addClass(this.config.skin);
this.input=$("<input type='text'/>").appendTo(this.wrapper).attr("autocomplete","off").attr("value","").attr("name",this.selectbox.attr("name")+this.config.suffix);
this.hidden=$("<input type='hidden'/>").appendTo(this.wrapper).attr("autocomplete","off").attr("value",this.config.initialHiddenValue).attr("name",this.selectbox.attr("name")+this.config.hiddenSuffix);
this.icon=$("<div/>").appendTo(this.wrapper).addClass("icon");
this.listWrapper=$("<div/>").appendTo(this.wrapper).addClass("invisible").addClass("list-wrapper");
this.updateDrop();
this.list=$("<ul/>").appendTo(this.listWrapper);
var d=this;
this.options.each(function(){var a=$.trim($(this).text());
$("<li/>").appendTo(d.list).text(a).addClass("visible")});
this.listItems=this.list.children();
if($.browser.opera){this.wrapper.css({position:"relative",left:"0",top:"0"})}this.filterFn=("function"==typeof(this.config.filterFn))?this.config.filterFn:this.filterFn;
this.lastKey=null;
//this.overflowCSS=$.browser.opera?"overflow":"overflowY";
this.overflowCSS="overflowY";
if(/MSIE 6.0/.test(navigator.appVersion)){this.overflowCSS="overflow"}this.overflowCSS="overflowY";
this.multiple=this.selectbox.attr("multiple");
var d=this;
this.wrapper.attr("sc:lastEvent","click");
/*if($.browser.opera){this.listWrapper.css("maxHeight","220px")}*/this.wrapper.bind("click",function(){d.wrapper.attr("sc:lastEvent","click")});
this.input.bind("keydown",function(e){if(9==e.keyCode){e.preventDefault()}});
this.wrapper.bind("keyup",function(e){var k=e.keyCode;
for(key in h.KEY){if(h.KEY[key]==k){return}}d.wrapper.attr("sc:lastEvent","key")});
this.input.bind("click",function(){d.wrapper.attr("sc:lastEvent","click");
//alert(d.wrapper.attr("sc:lastEvent"))});
this.icon.bind("click",function(e){if(!d.wrapper.attr("sc:positionY")){d.wrapper.attr("sc:positionY",e.pageY)}});
this.input.bind("click",function(e){if(!d.wrapper.attr("sc:positionY")){d.wrapper.attr("sc:positionY",e.pageY)}});
this.wrapper.bind("click",function(e){if(!d.wrapper.attr("sc:positionY")){d.wrapper.attr("sc:positionY",e.pageY)}});
this.notify("init");
alert("e");
this.initEvents()};
//shortcuts var h=$.sexyCombo;
h.fn=h.prototype={};
h.fn.extend=h.extend=$.extend;
h.fn.extend({//TOC of our plugin//initializes all event listeners//it would be more correct to call it initEvents initEvents:function(){var a=this;
this.icon.bind("click",function(){/*if(a.icon.hasClass("disabled")){return}*/if(a.input.attr("disabled")){a.input.attr("disabled",false)}a.wrapper.attr("sc:lastEvent","click");
a.filter();
a.iconClick()});
this.listItems.bind("mouseover",function(e){a.highlight(e.target)});
this.listItems.bind("click",function(e){a.listItemClick($(e.target))});
this.input.bind("keyup",function(e){a.keyUp(e)});
this.input.bind("keypress",function(e){if(h.KEY.RETURN==e.keyCode){e.preventDefault()}if(h.KEY.TAB==e.keyCode)//a.hideList();
e.preventDefault()});
$(document).bind("click",function(e){if((a.icon.get(0)==e.target)||(a.input.get(0)==e.target))return;
a.hideList()});
this.triggerSelected();
this.applyEmptyText();
this.notify("initEvents");
this.input.bind("click",function(e){a.wrapper.attr("sc:lastEvent","click");
//this.filter();
//a.showList();
a.icon.trigger("click")})},getTextValue:function(){return this.__getValue("input")},getCurrentTextValue:function(){return this.__getCurrentValue("input")},getHiddenValue:function(){return this.__getValue("hidden")},getCurrentHiddenValue:function(){return this.__getCurrentValue("hidden")},__getValue:function(a){a=this[a];
if(!this.multiple)return $.trim(a.val());
var b=a.val().split(this.config.separator);
var c=[];
for(var i=0,len=b.length;
i<len;
++i){c.push($.trim(b[i]))}c=h.normalizeArray(c);
return c},__getCurrentValue:function(a){a=this[a];
if(!this.multiple)return $.trim(a.val());
return $.trim(a.val().split(this.config.separator).pop())},//icon click event listener iconClick:function(){if(this.listVisible()){this.hideList();
this.input.blur()}else{this.showList();
this.input.focus();
if(this.input.val().length){this.selection(this.input.get(0),0,this.input.val().length)}}},//returns true when dropdown list is visible listVisible:function(){return this.listWrapper.hasClass("visible")},//shows dropdown list showList:function(){if(!this.listItems.filter(".visible").length)return;
this.listWrapper.removeClass("invisible").addClass("visible");
this.wrapper.css("zIndex","99999");
this.listWrapper.css("zIndex","99999");
//this.wrapper.find("*").css("zIndex","99999");
this.setListHeight();
var a=this.listWrapper.height();
var b=this.wrapper.height();
var c=parseInt(this.wrapper.attr("sc:positionY"))+b+a;
var d=$(window).height()+$(document).scrollTop();
if(c>d){this.setDropUp(true)}else{this.setDropUp(false)}this.highlightFirst();
this.listWrapper.scrollTop(0);
/*if(this.selectbox.is("#ctl00_ctl00_cphMainContent_cphMainContent_advNonParl_FP_ddlSector")){alert(this.listWrapper.css("overflow"))}*/this.notify("showList")},//hides dropdown list hideList:function(){if(this.listWrapper.hasClass("invisible"))return;
this.listWrapper.removeClass("visible").addClass("invisible");
this.wrapper.css("zIndex","0");
this.listWrapper.css("zIndex","99999");
this.notify("hideList")},//returns sum of all visible items height getListItemsHeight:function(){//alert("height is"+this.listItems.height());
//alert("li len is"+this.liLen());
//return this.listItems.height()*this.liLen();
var a=20;
if($.browser.msie){a=18}return a*this.liLen()},//changes list wrapper's overflow from hidden to scroll and vice versa(depending on list items height))setOverflow:function(){var a=this.getListMaxHeight();
if(isNaN(a)){a=200}if(this.getListItemsHeight()>a)this.listWrapper.css(this.overflowCSS,"scroll");
else this.listWrapper.css(this.overflowCSS,"hidden")},//highlights active item of the dropdown list highlight:function(a){if((h.KEY.DOWN==this.lastKey)||(h.KEY.UP==this.lastKey))return;
this.listItems.removeClass("active");
$(a).addClass("active")},//sets text and hidden inputs value setComboValue:function(a,b,c){var d=this.input.val();
var v="";
if(this.multiple){v=this.getTextValue();
if(b)v.pop();
v.push($.trim(a));
v=h.normalizeArray(v);
v=v.join(this.config.separator)+this.config.separator}else{v=$.trim(a)}this.input.val(v);
this.setHiddenValue(a);
this.filter();
if(c)this.hideList();
this.input.removeClass("empty");
if(this.multiple)this.input.focus();
if(this.input.val()!=d)this.notify("textChange")},//sets hidden inputs value//takes text input's value as a param setHiddenValue:function(a){var b=false;
a=$.trim(a);
var c=this.hidden.val();
if(!this.multiple){for(var i=0,len=this.options.length;
i<len;
++i){if(a==this.options.eq(i).text()){this.hidden.val(this.options.eq(i).val());
b=true;
break}}}else{var d=this.getTextValue();
var e=[];
for(var i=0,len=d.length;
i<len;
++i){for(var j=0,len1=this.options.length;
j<len1;
++j){if(d[i]==this.options.eq(j).text()){e.push(this.options.eq(j).val())}}}if(e.length){b=true;
this.hidden.val(e.join(this.config.separator))}}if(!b){this.hidden.val(this.config.initialHiddenValue)}if(c!=this.hidden.val())this.notify("change");
this.selectbox.val(this.hidden.val());
this.selectbox.trigger("change")},listItemClick:function(a){this.setComboValue(a.text(),true,true);
this.inputFocus()},//adds/removes items to/from the dropdown list depending on combo's current value filter:function(){//alert(this.wrapper.attr("sc:optionsChanged"));
if("yes"==this.wrapper.attr("sc:optionsChanged")){var c=this;
this.listItems.remove();
this.options=this.selectbox.children().filter("option");
this.options.each(function(){var a=$.trim($(this).text());
$("<li/>").appendTo(c.list).text(a).addClass("visible")});
this.listItems=this.list.children();
this.listItems.bind("mouseover",function(e){c.highlight(e.target)});
this.listItems.bind("click",function(e){c.listItemClick($(e.target))});
c.wrapper.attr("sc:optionsChanged","")}//end here var d=this.input.val();
var c=this;
this.listItems.each(function(){var a=$(this);
var b=a.text();
if(c.filterFn.call(c,c.getCurrentTextValue(),b,c.getTextValue())){a.removeClass("invisible").addClass("visible")}else{a.removeClass("visible").addClass("invisible")}});
this.setOverflow();
this.setListHeight()},//default dropdown list filtering function filterFn:function(a,b,c){if("click"==this.wrapper.attr("sc:lastEvent")){return true}//alert(a.toSource());
if(!this.multiple){return b.toLowerCase().indexOf(a.toLowerCase())==0}else{//exclude values that are already selected for(var i=0,len=c.length;
i<len;
++i){if(b==c[i]){return false}}return b.toLowerCase().search(a.toLowerCase())==0}},//just returns integer value of list wrapper's max-height property getListMaxHeight:function(){/*if($.browser.opera){return 220}*/if(this.listWrapper.css("maxHeight")){return parseInt(this.listWrapper.css("maxHeight"),10)}else{return 200}},//corrects list wrapper's height depending on list items height setListHeight:function(){var a=this.getListItemsHeight();
var b=this.getListMaxHeight();
//alert(b);
if(isNaN(b)){b=200}var c=this.listWrapper.height();
if(a<c){this.listWrapper.height(a);
return a}else if(a>c){this.listWrapper.height(Math.min(b,a));
return Math.min(b,a)}//alert('0')},//returns active(hovered)element of the dropdown list getActive:function(){return this.listItems.filter(".active")},keyUp:function(e){this.lastKey=e.keyCode;
var k=h.KEY;
switch(e.keyCode){case k.RETURN:case k.TAB://this.input.focus();
this.setComboValue(this.getActive().text(),true,true);
if(!this.multiple)this.input.blur();
break;
case k.DOWN:this.highlightNext();
break;
case k.UP:this.highlightPrev();
break;
case k.ESC:this.hideList();
break;
default:this.inputChanged();
break}},//returns number of currently visible list items liLen:function(){return this.listItems.filter(".visible").length},//triggered when the user changes combo value by typing inputChanged:function(){this.filter();
if(this.liLen()){this.showList();
this.setOverflow();
this.setListHeight()}else{this.hideList()}this.setHiddenValue(this.input.val());
this.notify("textChange")},//highlights first item of the dropdown list highlightFirst:function(){this.listItems.removeClass("active").filter(".visible:eq(0)").addClass("active");
this.autoFill()},//highlights item of the dropdown list next to the currently active item highlightNext:function(){var a=this.getActive().next();
while(a.hasClass("invisible")&&a.length){a=a.next()}if(a.length){this.listItems.removeClass("active");
a.addClass("active");
this.scrollDown()}},//scrolls list wrapper down when needed scrollDown:function(){if("scroll"!=this.listWrapper.css(this.overflowCSS))return;
var a=this.getActiveIndex()+1;
if($.browser.opera)++a;
var b=this.listItems.height()*a-this.listWrapper.height();
if($.browser.msie)b+=a;
if(this.listWrapper.scrollTop()<b)this.listWrapper.scrollTop(b)},//highlights list item before currently active item highlightPrev:function(){var a=this.getActive().prev();
while(a.length&&a.hasClass("invisible"))a=a.prev();
if(a.length){this.getActive().removeClass("active");
a.addClass("active");
this.scrollUp()}},//returns index of currently active list item getActiveIndex:function(){return $.inArray(this.getActive().get(0),this.listItems.filter(".visible").get())},//scrolls list wrapper up when needed scrollUp:function(){if("scroll"!=this.listWrapper.css(this.overflowCSS))return;
var a=this.getActiveIndex()*this.listItems.height();
if(this.listWrapper.scrollTop()>a){this.listWrapper.scrollTop(a)}},//emptyText stuff applyEmptyText:function(){if(!this.config.emptyText.length)return;
var a=this;
this.input.bind("focus",function(){a.inputFocus()}).bind("blur",function(){a.inputBlur()});
if(""==this.input.val()){this.input.addClass("empty").val(this.config.emptyText)}},inputFocus:function(){if(this.input.hasClass("empty")){this.input.removeClass("empty").val("")}},inputBlur:function(){if(""==this.input.val()){this.input.addClass("empty").val(this.config.emptyText)}},//triggerSelected stuff triggerSelected:function(){if(!this.config.triggerSelected)return;
var a=this;
this.options.each(function(){if($(this).attr("selected")){a.setComboValue($(this).text(),false,true)}})},//autofill stuff autoFill:function(){if(!this.config.autoFill||(h.KEY.BACKSPACE==this.lastKey)||this.multiple)return;
var a=this.input.val();
var b=this.getActive().text();
this.input.val(b);
this.selection(this.input.get(0),a.length,b.length)},//provides selection for autofilling//borrowed from jCarousel selection:function(a,b,c){if(a.createTextRange){var d=a.createTextRange();
d.collapse(true);
d.moveStart("character",b);
d.moveEnd("character",c);
d.select()}else if(a.setSelectionRange){a.setSelectionRange(b,c)}else{if(a.selectionStart){a.selectionStart=b;
a.selectionEnd=c}}//a.focus()},//for internal use updateDrop:function(){if(this.config.dropUp)this.listWrapper.addClass("list-wrapper-up");
else this.listWrapper.removeClass("list-wrapper-up")},//updates dropUp config option setDropUp:function(a){this.config.dropUp=a;
this.updateDrop()},notify:function(a){if(!$.isFunction(this.config[a+"Callback"]))return;
this.config[a+"Callback"].call(this)}});
h.extend({//key codes//from jCarousel KEY:{UP:38,DOWN:40,DEL:46,TAB:9,RETURN:13,ESC:27,COMMA:188,PAGEUP:33,PAGEDOWN:34,BACKSPACE:8},//for debugging log:function(a){var b=$("#log");
b.html(b.html()+a+"<br/>")},createSelectbox:function(a){var b=$("<select/>").appendTo(a.container).attr({name:a.name,id:a.id,size:"1"});
if(a.multiple)b.attr("multiple",true);
var c=a.data;
var d=false;
for(var i=0,len=c.length;
i<len;
++i){d=c[i].selected||false;
$("<option/>").appendTo(b).attr("value",c[i].value).text(c[i].text).attr("d",d)}return b.get(0)},create:function(b){var c={//the name of the d name:"",//the ID of the d id:"",//data for the options/*This is an array of objects.The objects should contain the following properties:(string)value-the value of the<option>(string)text-text of the<option>(bool)selected-if set to true,"selected"attribute of this<option>will be set to true*/data:[],//if true,combo with multiple choice will be created multiple:false,//an element that will contain the widget container:$(document),//url that contains JSON object for options data//format is the same as in data b option//if passed,"data"b option will be ignored url:"",//params for AJAX request ajaxData:{}};
b=$.extend({},c,b||{});
if(b.url){return $.getJSON(b.url,b.ajaxData,function(a){delete b.url;
delete b.ajaxData;
b.data=a;
return h.create(b)})}b.container=$(b.container);
var d=h.createSelectbox(b);
return new h(d,b)},deactivate:function(b){b=$(b);
b.each(function(){if("SELECT"!=this.tagName.toUpperCase()){return}var a=$(this);
if(!a.parent().is(".combo")){return}//a.parent().find("input[type='text']").attr("disabled",true)})},activate:function(b){b=$(b);
b.each(function(){if("SELECT"!=this.tagName.toUpperCase()){return}var a=$(this);
if(!a.parent().is(".combo")){return}a.parent().find("input[type='text']").attr("disabled",false)})},changeOptions:function(f){f=$(f);
f.each(function(){if("SELECT"!=this.tagName.toUpperCase()){return}var a=$(this);
var b=a.parent();
var c=b.find("input[type='text']");
var d=b.find("ul").parent();
d.removeClass("visible").addClass("invisible");
b.css("zIndex","0");
d.css("zIndex","99999");
c.val("");
b.attr("sc:optionsChanged","yes");
var e=a;
e.parent().find("input[type='text']").val(e.find("option:eq(0)").text());
e.parent().attr("sc:lastEvent","click");
e.find("option:eq(0)").attr('selected','selected')})},normalizeArray:function(a){var b=[];
for(var i=0,len=a.length;
i<len;
++i){if(""==a[i])continue;
b.push(a[i])}return b}})})(jQuery);
